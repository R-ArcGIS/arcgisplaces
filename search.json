[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josiah Parry. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Parry J (2024). arcgisplaces: Search POIs using ArcGIS 'Places Service'. R package version 0.1.1.","code":"@Manual{,   title = {arcgisplaces: Search for POIs using ArcGIS 'Places Service'},   author = {Josiah Parry},   year = {2024},   note = {R package version 0.1.1}, }"},{"path":"/index.html","id":"arcgisplaces","dir":"","previous_headings":"","what":"Search for POIs using ArcGIS Places Service","title":"Search for POIs using ArcGIS Places Service","text":"arcgisplaces R package interface ArcGIS Places Service. places service ready--use location service can search businesses geographic locations around world. allows find, locate, discover detailed information place. order use {arcgisplaces} need ArcGIS Developers account. Get started .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Search for POIs using ArcGIS Places Service","text":"can install binary development version arcgisplaces r-universe : also need development version {arcgisutils}","code":"install.packages(\"arcgisgeocode\", repos = \"https://r-arcgis.r-universe.dev\") if (!requireNamespace(\"pak\")) install.packages(\"pak\") pak::pak(\"r-arcgis/arcgisutils\")"},{"path":"/index.html","id":"building-from-source","dir":"","previous_headings":"Installation","what":"Building from source","title":"Search for POIs using ArcGIS Places Service","text":", can install development version GitHub. Note development version requires installation Rust. See rustup instructions install Rust.","code":"if (requireNamespace(\"pak\")) install.packages(\"pak\") pak::pak(\"r-arcgis/arcgisplaces\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Search for POIs using ArcGIS Places Service","text":"Finding places: near_point(): search places near location. within_extent(): search places within extent. Note: see fields possible attributes return place details. Understanding categories: categories(): find categories name ID. category_details(): get detailed information categories returned categories(). Find place attributes name, address, description, opening hours, price ratings, user ratings, social links.","code":""},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Search for POIs using ArcGIS Places Service","text":"arcgisutils needed authentication. Places API supports either using API key via auth_key() one generated via OAuth2 using either auth_client() auth_code(). See API documentation .","code":"library(arcgisutils) #>  #> Attaching package: 'arcgisutils' #> The following object is masked from 'package:base': #>  #>     %||% library(arcgisplaces)  # Authenticate with a Developer Account API Key token <- auth_key() set_arc_token(token)"},{"path":"/index.html","id":"place-search","dir":"","previous_headings":"","what":"Place search","title":"Search for POIs using ArcGIS Places Service","text":"can search places near location near_point(). Locations returned sf object place ID, place name, distance search point, character vector categories. [!TIP] arcgisplaces return sf object, sf package required work package. sf print method used unless package loaded. package size consideration—.e. deploying app Docker container—consider using wk rsgeo. Details places can fetched using place_details(). possible fields documented online well contained exported vector fields. pricing dependent upon fields requested, required argument. get add requested_fields = \"hours\". Note, possible fields still present result, completely empty. , can search places within bounding box using within_extent(). quite handy searching within current map bounds, example.","code":"coffee <- near_point(x = -122.334, y = 47.655, search_text = \"Coffee\") coffee #> Simple feature collection with 6 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -1122.334 ymin: -952.345 xmax: 877.666 ymax: 1047.655 #> Geodetic CRS:  WGS 84 #>                           place_id                                 name #> 1 f6059fc575735b5e3f558c96ab69e6f6 Irwin's Neighborhood Bakery and Cafe #> 2 88a10ccf031f02ef2697591f72e1e169                          Fuel Coffee #> 3 a8c6da1aa0d08fe96e5d80d0f3b3de03                     Friday Afternoon #> 4 906da2fe5164619199a2f2ba9c99a650                            Starbucks #> 5 d49bac9ae79ebfc88dc2c070ad0ee91c                    HHD Heuk Hwa Dang #> 6 4bdfa82268e67a698d0b8ea3d2df3853                          A Muddy Cup #>   distance   categories icon                   geometry #> 1     97.0 c(\"13002.... <NA> POINT (-122.3328 47.65539) #> 2    723.8 c(\"13035.... <NA> POINT (-122.3369 47.66122) #> 3    740.8 c(\"13036.... <NA>  POINT (-122.342 47.65895) #> 4    767.3 13035, C.... <NA> POINT (-122.3361 47.66175) #> 5    964.1 13033, B.... <NA> POINT (-122.3425 47.66153) #> 6    964.2 c(\"13035.... <NA> POINT (-122.3255 47.66149) details <- place_details(   coffee$place_id,   requested_fields = \"rating\",   .progress = FALSE # remove progress bar )  details[c(\"price\", \"user\")] #> Simple feature collection with 6 features and 2 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: Inf ymin: Inf xmax: -Inf ymax: -Inf #> Geodetic CRS:  WGS 84 #>      price user    location #> 1    Cheap  4.0 POINT EMPTY #> 2    Cheap  3.9 POINT EMPTY #> 3 Moderate   NA POINT EMPTY #> 4    Cheap  3.4 POINT EMPTY #> 5     <NA>   NA POINT EMPTY #> 6    Cheap  3.9 POINT EMPTY bakeries <- within_extent(   -70.356, 43.588, -70.176, 43.7182,   category_id = \"13002\" )  bakeries[c(\"name\")] #> Simple feature collection with 29 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -70.356 ymin: 43.588 xmax: -70.176 ymax: 43.7182 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                       name                   geometry #> 1           Crumbl Cookies POINT (-70.33067 43.67675) #> 2       Electric Bike Cafe  POINT (-70.2864 43.63655) #> 3  Gross Confection Bakery POINT (-70.25428 43.65763) #> 4           Dina’s Cuisine POINT (-70.28725 43.67695) #> 5           Lolli and Pops POINT (-70.33512 43.63377) #> 6    C Salt Gourmet Market  POINT (-70.2271 43.59174) #> 7          Bread & Friends POINT (-70.25693 43.65514) #> 8     BenReuben’s Knishery POINT (-70.25299 43.63748) #> 9        Katie Made Bakery POINT (-70.24992 43.66449) #> 10           Cinnamon Girl POINT (-70.27412 43.68086)"},{"path":"/reference/arcgisplaces-package.html","id":null,"dir":"Reference","previous_headings":"","what":"arcgisplaces: Search for POIs using ArcGIS 'Places Service' — arcgisplaces-package","title":"arcgisplaces: Search for POIs using ArcGIS 'Places Service' — arcgisplaces-package","text":"ArcGIS 'Places service' ready--use location service can search businesses geographic locations around world. allows find, locate, discover detailed information place. Query places near point, within bounding box, filter based categories, provide search text. 'arcgisplaces' integrates 'sf' box compatibility spatial libraries. Learn 'Places service' API reference https://developers.arcgis.com/rest/places/.","code":""},{"path":"/reference/arcgisplaces-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arcgisplaces: Search for POIs using ArcGIS 'Places Service' — arcgisplaces-package","text":"Maintainer: Josiah Parry josiah.parry@gmail.com (ORCID)","code":""},{"path":"/reference/categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the name and category ID of all categories, or categories which satisfy a filter — categories","title":"Return the name and category ID of all categories, or categories which satisfy a filter — categories","text":"category describes type place, \"movie theater\" \"zoo\". places service 1,000 categories (types) place. categories fall ten general groups: Arts Entertainment, Business Professional Services, Community Government, Dining Drinking, Events, Health Medicine, Landmarks Outdoors, Retail, Sports Recreation, Travel Transportation.","code":""},{"path":"/reference/categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the name and category ID of all categories, or categories which satisfy a filter — categories","text":"","code":"categories(   search_text = NULL,   icon = NULL,   language = NULL,   token = arc_token() )"},{"path":"/reference/categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the name and category ID of all categories, or categories which satisfy a filter — categories","text":"search_text Default NULL. Free search text places names, categories etc. Must scalar value. icon Default NULL. Must one \"svg\", \"png\" \"cim\". Determines whether icons returned type icon use place category. language Optional case-sensitive parameter specify preferred language . token object class httr2_token generated auth_code() related function","code":""},{"path":"/reference/categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the name and category ID of all categories, or categories which satisfy a filter — categories","text":"data.frame columns: category_id: unique identifier category full_label: list character vectors containing labels category icon_url: character vector containing icon URL present parents: list character vectors containing parent category_id values","code":""},{"path":"/reference/categories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return the name and category ID of all categories, or categories which satisfy a filter — categories","text":"categories organized hierarchical system general category contains many detailed variations parent category. example: \"Travel Transportation\" (Level 1), \"Transport Hub\" (Level 2), \"Airport\" (Level 3) \"Airport Terminal\" (Level 4). hierarchy 5 levels categories.","code":""},{"path":"/reference/categories.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Return the name and category ID of all categories, or categories which satisfy a filter — categories","text":"API Documentation","code":""},{"path":"/reference/categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the name and category ID of all categories, or categories which satisfy a filter — categories","text":"","code":"if (FALSE) { # \\dontrun{ categories(\"Coffee Shop\") } # }"},{"path":"/reference/category_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the category details for a category ID. — category_details","title":"Get the category details for a category ID. — category_details","text":"/categories/{categoryId} request returns groups category belongs. must supply category ID use request. Note: Query parameters case-sensitive.","code":""},{"path":"/reference/category_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the category details for a category ID. — category_details","text":"","code":"category_details(   category_id,   icon = NULL,   language = NULL,   token = arc_token(),   .progress = TRUE )"},{"path":"/reference/category_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the category details for a category ID. — category_details","text":"category_id Default NULL. character vector filters places match category IDs. icon Default NULL. Must one \"svg\", \"png\" \"cim\". Determines whether icons returned type icon use place category. language Optional case-sensitive parameter specify preferred language . token object class httr2_token generated auth_code() related function .progress Default TRUE. Whether progress bar provided.","code":""},{"path":"/reference/category_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the category details for a category ID. — category_details","text":"data.frame columns: category_id full_label: list character vectors icon_url: character vector URL icon, available parents: list character vectors indicating parent category ID","code":""},{"path":[]},{"path":"/reference/category_details.html","id":"language-codes","dir":"Reference","previous_headings":"","what":"Language Codes","title":"Get the category details for a category ID. — category_details","text":"language codes use CLDR (Common Locale Data Repository) format string uses two letter language code (e.g. \"fr\" French) optionally followed two letter country code (e.g. \"fr-CA\" French Canada). unsupported language code used, service attempt fall-back closest available language. done stripping regional extension subtags find known language code. example, French Canadian (fr-CA) unsupported falls back French fr. fallback fail, service return category names default language en English.","code":""},{"path":"/reference/category_details.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get the category details for a category ID. — category_details","text":"API Documentation","code":""},{"path":"/reference/category_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the category details for a category ID. — category_details","text":"","code":"if (FALSE) { # \\dontrun{ categories <- c(   \"12015\", \"11172\", \"15015\", \"19027\", \"13309\", \"16069\", \"19004\",   \"13131\", \"18046\", \"15048\" ) category_details(categories) } # }"},{"path":"/reference/fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible Fields to Return from Place Details — fields","title":"Possible Fields to Return from Place Details — fields","text":"character vector containing possible return fields define attributes return. Use place_details()'s requested_fields argument.","code":""},{"path":"/reference/fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible Fields to Return from Place Details — fields","text":"","code":"fields"},{"path":"/reference/fields.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Possible Fields to Return from Place Details — fields","text":"object class character length 40.","code":""},{"path":"/reference/fields.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Possible Fields to Return from Place Details — fields","text":"https://developers.arcgis.com/rest/places/place-id-get/#requestedfields","code":""},{"path":"/reference/near_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for places near a point by radius — near_point","title":"Search for places near a point by radius — near_point","text":"Finds places within given radius specified location. returned places contain basic data name, category location.","code":""},{"path":"/reference/near_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for places near a point by radius — near_point","text":"","code":"near_point(   x,   y,   radius = 1000,   search_text = NULL,   category_id = NULL,   icon = NULL,   token = arc_token() )"},{"path":"/reference/near_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for places near a point by radius — near_point","text":"x x coordinate, longitude, search , WGS84 decimal degrees. y y coordinate, latitude, search , WGS84 decimal degrees. radius Default 1000. radius meters search places. Maximum value 10000. search_text Default NULL. Free search text places names, categories etc. Must scalar value. category_id Default NULL. character vector filters places match category IDs. icon Default NULL. Must one \"svg\", \"png\" \"cim\". Determines whether icons returned type icon use place category. token object class httr2_token generated auth_code() related function","code":""},{"path":"/reference/near_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for places near a point by radius — near_point","text":"sf object columns place_id: unique Id place. ID can passed place_details() retrieve additional details. name: name place, point interest. can search places name using searchText property distance: double vector distance, meters, place search point. categories: data.frame two columns category_id label. Categories uniquely identified categoryId. example, 17119 identifies \"Bicycle Store\" 10051 identifies \"Stadium\". Note single place can belong multiple categories (example, petrol station also super-market). icon: character vector URL icon place category either svg, cim png format. geometry: sfc_POINT object EPSG:4326","code":""},{"path":"/reference/near_point.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search for places near a point by radius — near_point","text":"API Documentation","code":""},{"path":"/reference/near_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for places near a point by radius — near_point","text":"","code":"if (FALSE) { # \\dontrun{ near_point(-117.194769, 34.057289) near_point(139.75, 35.66) } # }"},{"path":"/reference/place_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Get place details including name, address, description, and other attributes — place_details","title":"Get place details including name, address, description, and other attributes — place_details","text":"/places/{placeId} request returns details place.","code":""},{"path":"/reference/place_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get place details including name, address, description, and other attributes — place_details","text":"","code":"place_details(   place_id,   requested_fields,   icon = NULL,   token = arc_token(),   .progress = TRUE )"},{"path":"/reference/place_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get place details including name, address, description, and other attributes — place_details","text":"place_id character vector place IDs generated within_extent() near_point(). requested_fields Required. See API Reference possible fields refer fields vector. icon Default NULL. Must one \"svg\", \"png\" \"cim\". Determines whether icons returned type icon use place category. token object class httr2_token generated auth_code() related function .progress Default TRUE. Whether progress bar provided.","code":""},{"path":"/reference/place_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get place details including name, address, description, and other attributes — place_details","text":"sf object","code":""},{"path":"/reference/place_details.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get place details including name, address, description, and other attributes — place_details","text":"request details, use requested_fields argument specify fields attributes want Place, Address, Details /Location price groups. always recommended specify fields want, however, can also use requested_fields=return attributes available. default, place_id attribute always returned addition attributes requested. attributes available places may vary. example, opening hours may available (applicable) geographic places landmarks. charged attributes contain valid values requested fields. data available requested field, null empty collection returned charged. charged one attributes valid values returned price group.","code":""},{"path":"/reference/place_details.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get place details including name, address, description, and other attributes — place_details","text":"API Documentation","code":""},{"path":"/reference/place_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get place details including name, address, description, and other attributes — place_details","text":"","code":"if (FALSE) { # \\dontrun{ place_ids <- c(   \"37f1062ae1c3d37511003e382b08ca32\",   \"9cdd210841deedef0e3309bdd3fe47f1\" )  res <- place_details(place_ids) } # }"},{"path":"/reference/within_extent.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for places within an extent (bounding box). — within_extent","title":"Search for places within an extent (bounding box). — within_extent","text":"/places/within-extent request searches places within extent (bounding box).","code":""},{"path":"/reference/within_extent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for places within an extent (bounding box). — within_extent","text":"","code":"within_extent(   xmin,   ymin,   xmax,   ymax,   search_text = NULL,   category_id = NULL,   icon = NULL,   token = arc_token() )"},{"path":"/reference/within_extent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for places within an extent (bounding box). — within_extent","text":"xmin minimum x coordinate, longitude, search extent EPSG:4326. ymin minimum y coordinate, latitude, search extent EPSG:4326 xmax maximum x coordinate, longitude, search extent EPSG:4326. ymax maximum y coordinate, latitude, search extent EPSG:4326 search_text Default NULL. Free search text places names, categories etc. Must scalar value. category_id Default NULL. character vector filters places match category IDs. icon Default NULL. Must one \"svg\", \"png\" \"cim\". Determines whether icons returned type icon use place category. token object class httr2_token generated auth_code() related function","code":""},{"path":"/reference/within_extent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for places within an extent (bounding box). — within_extent","text":"sf object columns place_id: unique Id place. ID can passed place_details() retrieve additional details. name: name place, point interest. can search places name using searchText property categories: data.frame two columns category_id label. Categories uniquely identified categoryId. example, 17119 identifies \"Bicycle Store\" 10051 identifies \"Stadium\". Note single place can belong multiple categories (example, petrol station also super-market). icon: character vector URL icon place category either svg, cim png format. geometry: sfc_POINT object EPSG:4326","code":""},{"path":"/reference/within_extent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search for places within an extent (bounding box). — within_extent","text":"must supply xmin, ymin, xmax ymax coordinates define extent. maximum width height extent can used search 20,000 meters. can also provide multiple categories search text find specific types places within extent. Note: permanently store places. Please see Terms use. Note: Query parameters case-sensitive.","code":""},{"path":"/reference/within_extent.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search for places within an extent (bounding box). — within_extent","text":"API Documentation","code":""},{"path":"/reference/within_extent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for places within an extent (bounding box). — within_extent","text":"","code":"if (FALSE) { # \\dontrun{ within_extent(   139.74,   35.65,   139.75,   35.66,   category_ids = \"10001\" ) } # }"},{"path":[]},{"path":"/news/index.html","id":"arcgisplaces-010","dir":"Changelog","previous_headings":"","what":"arcgisplaces 0.1.0","title":"arcgisplaces 0.1.0","text":"CRAN release: 2024-05-15 Initial CRAN submission.","code":""}]
